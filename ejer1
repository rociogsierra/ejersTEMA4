class nodo_arbol(object):
    def __init__(self, izq=None, der=None):
        self.izq = izquierda
        self.der = derecha

    def children(self):
        return self.izq, self.der

    def __str__(self):
        return self.izq, self.der

def huffman_arbol_code(nodo, binString=''):
    if type(nodo) is str:
         return {nodo: binString}

    (l, r) = nodo.children()
    d = dict()
    d.update(huffman_arbol_code(l, binString + '0'))
    d.update(huffman_arbol_code(r, binString + '1'))
    return d

def huffman_arbol_decode(message, nodo_raiz, nodo, msgd=''):
     if len(message) == 0:
        print("descodificado: {}".format(msgd))
        return msgd

        

